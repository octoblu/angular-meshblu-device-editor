(function(){angular.module("angular-meshblu-device-editor",["schemaForm","ngLodash"])}).call(this),function(){var e,s=function(e,s){return function(){return e.apply(s,arguments)}};e=function(){function e(e){this.scope=e,this.selectedSchemaKey=s(this.selectedSchemaKey,this),this.schemaKeys=s(this.schemaKeys,this),this.schema=s(this.schema,this),this.availabledSchemas=s(this.availabledSchemas,this),this.scope.availabledSchemas=this.availabledSchemas(),this.scope.selectedSchemaKey=this.selectedSchemaKey(),this.scope.schema=this.schema(),this.scope.formSchema=["*"],this.scope.$watch("selectedSchemaKey",function(e){return function(){return e.scope.schema=e.schema(),e.scope.message={}}}(this))}return e.prototype.availabledSchemas=function(){return this.schemaKeys().map(function(e){return function(s){var t,a,c,n;return c=null!=(t=e.scope.schemas)?t[s]:void 0,n=null!=(a=null!=c?c.title:void 0)?a:s,{key:s,title:n}}}(this))},e.prototype.schema=function(){var e;return null!=(e=this.scope.schemas)?e[this.scope.selectedSchemaKey]:void 0},e.prototype.schemaKeys=function(){var e;return null!=(e=Object.keys(this.scope.schemas))?e:[]},e.prototype.selectedSchemaKey=function(){return this.schemaKeys()[0]},e}(),window.angular.module("angular-meshblu-device-editor").controller("MessageSchemaContainer",["$scope",e])}.call(this),function(){window.angular.module("angular-meshblu-device-editor").directive("messageSchemaContainer",function(){return{restrict:"E",templateUrl:"message-schema-container/template.html",replace:!0,controller:"MessageSchemaContainer",scope:{message:"=",schemas:"=",selectedSchema:"="}}})}.call(this),function(){}.call(this),function(){}.call(this),angular.module("angular-meshblu-device-editor").run(["$templateCache",function(e){e.put("message-schema-container/template.html",'<div>\n  <select\n    ng-options="option.key as option.title for option in availabledSchemas"\n    ng-model="selectedSchemaKey"></select>\n\n  <form sf-schema="schema" sf-form="formSchema" sf-model="message"></form>\n</div>\n'),e.put("device-message-schema-container/template.html","")}]);
//# sourceMappingURL=data:application/json;base64,
